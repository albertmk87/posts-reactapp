{"version":3,"sources":["components/Post.module.css","containers/Blog/Blog.module.css","components/FullPost.module.css","components/AddPost.module.css","components/Post.js","components/Auxiliary.js","components/FullPost.js","components/AddPost.js","containers/Blog/Blog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Post","props","onClick","select","className","classes","title","author","Auxiliary","children","FullPost","state","loadedPost","this","currentPost","id","axios","get","then","response","setState","data","result","console","log","body","deletePost","React","Component","AddPost","ID","Math","random","toString","substr","addPost","newPost","updateState","type","value","onChange","event","target","rows","Blog","posts","currentPostId","newPosts","findIndex","post","splice","newData","push","fetch","json","obj","slice","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6afef14b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__3tVIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Blog\":\"Blog_Blog__2Htgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FullPost\":\"FullPost_FullPost__3s5Vx\",\"Edit\":\"FullPost_Edit__11Ajc\",\"Delete\":\"FullPost_Delete__3zSQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddPost\":\"AddPost_AddPost__3U-EV\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post=(props)=>{\r\n\treturn (\r\n\t\t\t<div onClick={props.select} className={classes.Post}>\r\n\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t<p>{props.author}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\n\r\n\r\nconst Auxiliary=props=>{\r\n\treturn(\r\n\t\t\tprops.children\r\n\t\t)\r\n}\r\n\r\n\r\nexport default Auxiliary;","import React from 'react';\r\nimport classes from './FullPost.module.css';\r\nimport Auxiliary from './Auxiliary.js';\r\nimport axios from 'axios';\r\n\r\nclass FullPost extends React.Component{\r\n\r\n\t    state={\r\n        loadedPost:null\r\n\r\n    }\r\n\r\n   componentDidUpdate () {\r\n        if ( this.props.currentPost) {\r\n            if(!this.state.loadedPost || (this.state.loadedPost && this.state.loadedPost.id!==this.props.currentPost)){\r\n                axios.get( 'https://jsonplaceholder.typicode.com/posts/' + this.props.currentPost )\r\n                    .then( response => {\r\n                        // console.log(response);\r\n                        this.setState( { loadedPost: response.data } );\r\n                    } );\r\n            }\r\n   \r\n        }\r\n    }\r\n\r\n\r\n\trender(){\r\n\t\r\n\tlet cur='';\r\n\tlet result=<p>Please select a post</p>\r\n\tif(this.props.currentPost){\r\n\t\tif(this.state.loadedPost){\r\n\t\t\tconsole.log(this.state.loadedPost)\r\n\t\tresult=(\r\n\t\t\t\t<Auxiliary>\r\n\t\t\t\t<h2>{this.state.loadedPost.title} </h2>\r\n\t\t\t\t<p>{this.state.loadedPost.body}</p>\r\n\t\t\t\t<button onClick={this.props.deletePost}> Delete </button>\r\n\t\t\t\t</Auxiliary>\r\n\t\t\t)\r\n\t}\r\n\t}\r\n\t\r\n\r\n\r\n\treturn (\r\n\t\t\t<div className={classes.FullPost}>\r\n\r\n\t\t\t\t{result}\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n}\r\nexport default FullPost;","import React from 'react';\r\nimport classes from './AddPost.module.css';\r\nimport Auxiliary from './Auxiliary.js';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddPost extends React.Component {\r\n\r\n\r\n\tstate={\r\n\t\ttitle:\"\",\r\n\t\tauthor:\"\",\r\n\t\tbody:\"\"\r\n\t}\r\n\r\n\tID=()=> {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\n\taddPost=()=>{\r\n\t\tif(this.state.title!==\"\" && this.state.author !==\"\" && this.state.body!==\"\"){\r\n\t\t\tconst newPost={\r\n\t\t\t\tid:this.ID(),\r\n\t\t\t\tauthor:this.state.author,\r\n\t\t\t\ttitle:this.state.title,\r\n\t\t\t\tbody:this.state.body\r\n\t\t\t}\r\n\t\t\tthis.props.updateState(newPost);\r\n\t\t\tthis.setState({title:\"\", author:\"\", body:\"\"});\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\r\n\trender(){\r\n\treturn (\r\n\t\t<div className={classes.AddPost}>\r\n\t\t\t<h2>Add a post </h2>\r\n\t\t\t<label>Author</label>\r\n\t\t <input type=\"text\" value={this.state.author} onChange={(event) => this.setState({author: event.target.value})} />\r\n\t\t\t<label>Title</label>\r\n            <input type=\"text\" value={this.state.title} onChange={(event) => this.setState({title: event.target.value})} />\r\n            <label>Content</label>\r\n            <textarea rows=\"4\" value={this.state.body} onChange={(event) => this.setState({body: event.target.value})} />\r\n\t\t\t<button onClick={this.addPost}>Add a post</button>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n}\r\n\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport Post from '../../components/Post.js';\r\nimport Auxiliary from '../../components/Auxiliary.js';\r\nimport classes from './Blog.module.css';\r\nimport FullPost from '../../components/FullPost.js';\r\nimport AddPost from '../../components/AddPost.js';\r\n\r\n\r\nclass Blog extends React.Component {\r\n\r\n\tstate={\r\n\t\tposts:[],\r\n\t\tcurrentPostId:null,\r\n\t\tdata:{}\r\n\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet url=\"https://jsonplaceholder.typicode.com/posts\";\r\n    \t  let obj=await (await fetch(url)).json();\r\n    \t  let response=obj.slice(0,8).map(post=>{\r\n    \t  \treturn {\r\n    \t  \t\t...post,\r\n    \t  \t\tauthor:\"Albert\"\r\n    \t  \t}\r\n    \t  })\r\n    \t this.setState({posts:response})\r\n\t}\r\n\r\n\tselect=(id)=>{\r\n\t\tthis.setState({currentPostId:id});\r\n\t}\r\n\r\n\tdeletePost=(id)=>{\r\n\t\tlet newPosts=this.state.posts;\r\n\t\tlet findIndex=newPosts.findIndex(post=>post.id===id);\r\n\t\tnewPosts.splice(findIndex,1);\r\n\t\tthis.setState({posts:newPosts, currentPostId:null})\r\n\t}\r\n\r\n\tupdateState=(newData)=>{\r\n\t\t\tconst newPosts=this.state.posts;\r\n\t\t\tnewPosts.push(newData);\r\n\t\t\tthis.setState({posts:newPosts})\r\n\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tlet posts=this.state.posts.map(post=>{\r\n\t\t\treturn <Post select={()=>this.select(post.id)} key={post.id} id={post.id} title={post.title} author={post.author} />\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<Auxiliary>\r\n\t\t\t\t<div className={classes.Blog}>\r\n\t\t\t\t{posts}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<FullPost deletePost={()=>this.deletePost(this.state.currentPostId)} currentPost={this.state.currentPostId} posts={this.state.posts} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<AddPost updateState={this.updateState} />\r\n\t\t\t\t</div>\r\n\t\t\t\t</Auxiliary>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nexport default Blog;","import React from 'react';\nimport Blog from './containers/Blog/Blog.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Blog />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}